# Generated by Django 5.2 on 2025-04-30 15:22

import django.contrib.auth.models
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.TextField(db_column='id', default=uuid.uuid4, max_length=36, primary_key=True, serialize=False)),
                ('first_name', models.TextField(blank=True, db_column='firstName', null=True)),
                ('last_name', models.TextField(blank=True, db_column='lastName', null=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('image_url', models.URLField(blank=True, db_column='imageUrl', null=True)),
                ('phone', models.TextField(blank=True, null=True, unique=True)),
                ('employee', models.BooleanField(blank=True, null=True)),
                ('bio', models.TextField(blank=True, null=True)),
                ('age', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(db_column='createdAt', default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(db_column='updatedAt', default=django.utils.timezone.now)),
                ('role', models.CharField(choices=[('admin', 'Admin'), ('user', 'User')], default='user', max_length=20)),
                ('location', models.JSONField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'user',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('job_id', models.TextField(db_column='jobId', default=uuid.uuid4, max_length=36, primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='Name', max_length=255)),
                ('start_date', models.DateTimeField(db_column='StartDate')),
                ('end_date', models.DateTimeField(blank=True, db_column='EndDate', null=True)),
                ('salary', models.FloatField(blank=True, db_column='Salary', null=True)),
                ('higher_salary', models.FloatField(blank=True, db_column='HigherSalary', null=True)),
                ('description', models.TextField(db_column='Description')),
                ('requirements', models.TextField(blank=True, db_column='Requirements', null=True)),
                ('posted_date', models.DateTimeField(db_column='PostedDate')),
                ('photo_url', models.URLField(db_column='PhotoUrl')),
                ('start_age', models.IntegerField(blank=True, db_column='Startage', null=True)),
                ('end_age', models.IntegerField(blank=True, db_column='Endage', null=True)),
                ('gender', models.BooleanField(blank=True, db_column='Gender', null=True)),
                ('location', models.JSONField(blank=True, null=True)),
                ('job_type', models.CharField(blank=True, choices=[('FULL_TIME', 'Full Time'), ('PART_TIME', 'Part Time'), ('CONTRACT', 'Contract'), ('TEMPORARY', 'Temporary'), ('INTERNSHIP', 'Internship')], db_column='jobType', max_length=20, null=True)),
                ('location_name', models.TextField(blank=True, db_column='locationName', null=True)),
                ('company', models.TextField(blank=True, db_column='Company', null=True)),
                ('duration', models.TextField(blank=True, db_column='Duration', null=True)),
                ('pay_type', models.TextField(blank=True, db_column='PayType', null=True)),
                ('employer_id', models.ForeignKey(db_column='id', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'Job',
            },
        ),
        migrations.CreateModel(
            name='Application',
            fields=[
                ('application_id', models.TextField(db_column='applicationId', default=uuid.uuid4, max_length=36, primary_key=True, serialize=False)),
                ('accept', models.IntegerField()),
                ('bio', models.TextField(blank=True, db_column='Bio', null=True)),
                ('employee_review', models.TextField(blank=True, db_column='EmployeeReview', null=True)),
                ('employer_review', models.TextField(blank=True, db_column='EmployerReview', null=True)),
                ('employer_id', models.TextField(blank=True, db_column='employerId', null=True)),
                ('employee_id', models.ForeignKey(db_column='id', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('job_id', models.ForeignKey(db_column='jobId', on_delete=django.db.models.deletion.CASCADE, to='applications.job')),
            ],
            options={
                'db_table': 'application',
            },
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['email'], name='user_email_7bbb4c_idx'),
        ),
        migrations.AddIndex(
            model_name='job',
            index=models.Index(fields=['employer_id'], name='Job_id_21024a_idx'),
        ),
        migrations.AddIndex(
            model_name='job',
            index=models.Index(fields=['job_type'], name='Job_jobType_cb943a_idx'),
        ),
        migrations.AddIndex(
            model_name='job',
            index=models.Index(fields=['location_name'], name='Job_locatio_dcc49a_idx'),
        ),
        migrations.AddIndex(
            model_name='application',
            index=models.Index(fields=['job_id'], name='application_jobId_b7e6e7_idx'),
        ),
        migrations.AddIndex(
            model_name='application',
            index=models.Index(fields=['employee_id'], name='application_id_910cf1_idx'),
        ),
    ]
